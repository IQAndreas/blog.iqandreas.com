post_id: /monologues/the-problems-with-being-self-taught
date: 2012-03-15 07:28
return_url: 'http://IQAndreas.github.com/monologues/the-problems-with-being-self-taught/'
name: 'Stray'
email: 'dailystraying@gmail.com'
link: 'http://xxcoder.net'
comment: '<p>I think being self-taught is generally considered to be a positive thing because it''s a very strong indicator that you''re going to continue to learn, irrespective of the presence or absence of formal training.</p>

<p>Being self-taught in programming demonstrates a tenacity that is desirable - though it would be faulty thinking to assume that this implies greater tenacity than people who''ve been trained more formally.</p>

<p>In a very crude sense, choosing Comp Sci at 18 probably has less correlation with it being the right choice for you than pushing through all the little obstacles that are in the path of a self-taught programmer. But if you''ve been in the business for more than a few years after you graduate, you <strong>must</strong> be self-teaching the new stuff too.</p>

<p>The learning cycle, in any discipline, goes through the 4 phases:
<ul><li>Unconscious Incompetence</li>
<li>Conscious Incompetence</li>
<li>Conscious Competence</li>
<li>Unconscious Competence</li></ul></p>

<p>As long as you stay aware of the need to return regularly to Conscious Incompetence, and you choose to keep feeding yourself with multiple good sources of new information, I don''t think being self-taught hinders you.</p>

<p>As you identify - the danger is the intermediate phase. Bad developers often think they''re great developers. They have no concept of how much there is to learn, and think they can jump straight from making a button change a sprite to building a full featured application.</p>

<p>I usually smile and say "Wow - good luck with that!" because trying to explain to someone that they have only scratched the surface of the surface never goes well.</p>

<p>I think that phase is actually just called youth :)</p>

<p>Generally, by the time you hit 30 (or earlier), you''ve been through and out the other side of that phase in some area of your life, and that changes your perspective of all learning, permanently.</p>

<p>You''ve <strong>known</strong> things and then later wondered how you could have been so naive, and the nature of what it is to <strong>know</strong> something changes too.</p>

<p>Personally, the big attraction of self-taught developers is that mostly it means that they''ve studied something else. For me, that was product and manufacturing engineering. For others it''s philosophy, or history, or languages. It all makes for a much more interesting group-working experience IMO. You want a few comp-sci folk in the mix, to remind you about memory and rendering and threading, but diversity is also welcome.</p>

<p>I think there''s never been a better time to be a developer - self-taught or otherwise - Twitter and other channels are making it easier and easier for us to be inspired by folk, aspire to be like them and then receive casual mentoring from our peers in pursuit of ''being better''. Good times!</p>'
submit: 'Submit Comment'
