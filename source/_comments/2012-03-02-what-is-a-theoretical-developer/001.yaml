post_id: /monologues/what-is-a-theoretical-developer
date: 2012-03-03 08:38
name: 'Martin Heidegger'
email: 'mh@leichtgewicht.at'
link: 'http://leichtgewicht.at'
comment: '<p>There was certainly a time in my life where the most I thought about was theories. Basically our brain is wired to find patterns and when we find them we are super proud of them. Those patterns are theories that you were talking about imho.</p>

<p>What are common problems of systems? What are commons ways to fix them? They are helpful tools that we automatically apply in daily life.</p>

<p>Let me bring in a example: Drupal. I despise Drupal by now. I had to learn it inside out and it does so many things at its basic completely wrong. Wrong in the meaning of: I would never design a system that way because I know it will lead to problems. And it did lead to problems, many in my case - partly practically unsolvable ones. But: Its drawbacks aside the system is used (a lot) around the globe and it serves for a plethora of purposes for exactly the same reasons. So: the architecture can''t be all wrong. Now I have to think how this way can be right and wrong a the same time.</p>

<p>Now: As theorist (that still exists in me) Should I ignore that I see those patterns of problems that I stumble upon every day? No! Should I therefore not work with or accept Drupal? Certainly not.</p>

<p>Thinking is one thing: But you are also talking about articulation: Those people (like me now) express and exchange their opinions. I would encourage that but I have seen great developers that don''t do it. Geniuses? Maybe.</p>

<p>I think every developers tries to abstract problems/solutions and we test them either when writing new code or talking to others. Some more balanced on A some more on B. </p>

<p>The important mind is to not get stuck in one opinion and also learn to listen(read) what others have to say. And that is just politeness-training.</p>

'
submit: 'Submit Comment'
