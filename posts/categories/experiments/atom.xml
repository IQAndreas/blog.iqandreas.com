<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[experiments | Andreas Renberg (IQAndreas)]]></title>
  <link href="http://IQAndreas.github.com/posts/categories/experiments/atom.xml" rel="self"/>
  <link href="http://IQAndreas.github.com/"/>
  <updated>2013-01-02T13:14:23+01:00</updated>
  <id>http://IQAndreas.github.com/</id>
  <author>
    <name><![CDATA[Andreas Renberg (IQAndreas)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Experiment: Drop Painter]]></title>
    <link href="http://IQAndreas.github.com/actionscript/experiments/experiment-drop-painter/"/>
    <updated>2011-06-03T17:12:00+02:00</updated>
    <id>http://IQAndreas.github.com/actionscript/experiments/experiment-drop-painter</id>
    <content type="html"><![CDATA[<p>No, it's not painting with drops (though, that seems like a great idea for another project). Instead this experiment drops pieces of a painting down from above which eventually form to assemble a complete picture.</p>

<p><a href="http://iqandreas.isbetterthanyou.org/public/kirupa.com/square-contest-2011/"><img class="center" src="http://iqandreas.isbetterthanyou.org/public/kirupa.com/square-contest-2011/experiment-drop-painter-preview-image.png"></a>
<em>Click the image to go open the SWF</em></p>

<!-- more -->


<p>The code is written in AS3 and uses <a href="http://www.box2dflash.org/">Box2D</a> for the physics and <a href="http://www.minimalcomps.com/">MinimalComps</a> for the components.</p>

<p>At first I wrote the code up as a prototype just to test a concept (and rather than rewrite the code cleanly, I just kept adding onto it so it became one tightly-coupled mess).</p>

<p>I later entered it into a <a href="http://www.kirupa.com/forum/showthread.php?362779-Information-and-Rules!">contest</a> held on the <a href="http://www.kirupa.com/forum/">Kirupa Forums</a>, and modified it slightly to fit the contest theme.</p>

<p><a href="https://github.com/IQAndreas/Drop-Painter-Experiment">The source is available on GitHub</a> in case anyone is curious how it was achieved (and yes, I did cheat. It's not actually dynamic. The movement of all those shapes are "pre-baked" during the "Loading" screen and simply played back afterwards, which is why it is able to take up so little CPU on playback. <img class="smiley" src="http://www.kirupa.com/forum/images/smilies/trout.gif"></p>
]]></content>
  </entry>
  
</feed>
